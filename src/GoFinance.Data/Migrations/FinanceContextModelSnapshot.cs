// <auto-generated />
using System;
using GoFinance.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoFinance.Data.Migrations
{
    [DbContext(typeof(FinanceContext))]
    partial class FinanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoFinance.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<int>("Codigo")
                        .HasColumnType("int")
                        .HasColumnName("Codigo");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContaFinanceira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Banco");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Saldo");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContaFinanceira");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContasPagar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<Guid?>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<int>("NumeroParcelas")
                        .HasColumnType("int")
                        .HasColumnName("NumeroParcelas");

                    b.Property<string>("Observacoes")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Observacoes");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContasPagar");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("UrlSite")
                        .HasColumnType("varchar(250)")
                        .HasColumnName("UrlSite");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Movimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaFinanceiraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaPagarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime>("DtMovimento")
                        .HasColumnType("datetime")
                        .HasColumnName("DtMovimento");

                    b.Property<string>("NomeDescritivo")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeDescritivo");

                    b.Property<int>("TipoMovimento")
                        .HasColumnType("int")
                        .HasColumnName("TipoMovimento");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaFinanceiraId");

                    b.HasIndex("ContaPagarId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Movimentos");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Parcela", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaFinanceiraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContaPagarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Desconto");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<DateTime?>("DtPagamento")
                        .HasColumnType("datetime")
                        .HasColumnName("DtPagamento");

                    b.Property<DateTime>("DtVencimento")
                        .HasColumnType("datetime")
                        .HasColumnName("DtVencimento");

                    b.Property<decimal?>("Juros")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Juros");

                    b.Property<decimal?>("Multa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Multa");

                    b.Property<string>("NomeDescritivo")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NomeDescritivo");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("int")
                        .HasColumnName("NumeroParcela");

                    b.Property<int>("StatusParcela")
                        .HasColumnType("int")
                        .HasColumnName("StatusParcela");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Valor");

                    b.HasKey("Id");

                    b.HasIndex("ContaFinanceiraId");

                    b.HasIndex("ContaPagarId");

                    b.ToTable("Parcelas");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Smtp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Host");

                    b.Property<string>("Mascara")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<int>("Porta")
                        .HasColumnType("int")
                        .HasColumnName("Porta");

                    b.Property<bool>("SSL")
                        .HasColumnType("bit")
                        .HasColumnName("SSL");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Senha");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Usuario");

                    b.HasKey("Id");

                    b.ToTable("Smtp");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Administrador")
                        .HasColumnType("bit")
                        .HasColumnName("Administrador");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataExpiracaoRefleshToken")
                        .HasColumnType("datetime")
                        .HasColumnName("DataExpiracaoRefleshToken");

                    b.Property<DateTime?>("DataExpiracaoToken")
                        .HasColumnType("datetime")
                        .HasColumnName("DataExpiracaoToken");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime")
                        .HasColumnName("DtCadastro");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nome");

                    b.Property<string>("RefleshToken")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("RefleshToken");

                    b.Property<byte[]>("Senha")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("Senha");

                    b.Property<string>("TokenAlteracaoSenha")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TokenAlteracaoSenha");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Categoria", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContaFinanceira", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("ContaFinanceiras")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContasPagar", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Categoria", "Categoria")
                        .WithMany("ContasPagar")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoFinance.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("ContasPagar")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("ContasPagar")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Fornecedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Fornecedores")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GoFinance.Domain.Core.ValuesObjects.CnpjCpf", "CnpjCpf", b1 =>
                        {
                            b1.Property<Guid>("FornecedorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("NumeroDocumento")
                                .HasColumnType("varchar(14)")
                                .HasColumnName("NumeroDocumento");

                            b1.HasKey("FornecedorId");

                            b1.ToTable("Fornecedores");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");
                        });

                    b.Navigation("CnpjCpf");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Movimento", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.ContaFinanceira", "ContaFinanceira")
                        .WithMany("Movimentos")
                        .HasForeignKey("ContaFinanceiraId");

                    b.HasOne("GoFinance.Domain.Entities.ContasPagar", "ContasPagar")
                        .WithMany("Movimentos")
                        .HasForeignKey("ContaPagarId");

                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaFinanceira");

                    b.Navigation("ContasPagar");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Parcela", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.ContaFinanceira", "ContaFinanceira")
                        .WithMany("Parcelas")
                        .HasForeignKey("ContaFinanceiraId");

                    b.HasOne("GoFinance.Domain.Entities.ContasPagar", "ContaPagar")
                        .WithMany("Parcelas")
                        .HasForeignKey("ContaPagarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaFinanceira");

                    b.Navigation("ContaPagar");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Smtp", b =>
                {
                    b.OwnsOne("GoFinance.Domain.Core.ValuesObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("SmtpId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .HasColumnType("varchar(200)")
                                .HasColumnName("Email");

                            b1.HasKey("SmtpId");

                            b1.ToTable("Smtp");

                            b1.WithOwner()
                                .HasForeignKey("SmtpId");
                        });

                    b.Navigation("Email");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("GoFinance.Domain.Core.ValuesObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .HasColumnType("varchar(200)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Categoria", b =>
                {
                    b.Navigation("ContasPagar");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContaFinanceira", b =>
                {
                    b.Navigation("Movimentos");

                    b.Navigation("Parcelas");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContasPagar", b =>
                {
                    b.Navigation("Movimentos");

                    b.Navigation("Parcelas");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Fornecedor", b =>
                {
                    b.Navigation("ContasPagar");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("ContaFinanceiras");

                    b.Navigation("ContasPagar");

                    b.Navigation("Fornecedores");

                    b.Navigation("Movimentacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
