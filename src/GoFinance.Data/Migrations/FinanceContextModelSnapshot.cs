// <auto-generated />
using System;
using GoFinance.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GoFinance.Data.Migrations
{
    [DbContext(typeof(FinanceContext))]
    partial class FinanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GoFinance.Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .HasColumnName("Codigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContaFinanceira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Banco")
                        .IsRequired()
                        .HasColumnName("Banco")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Saldo")
                        .HasColumnName("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContaFinanceira");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContasPagar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NumeroParcelas")
                        .HasColumnName("NumeroParcelas")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasColumnName("Observacoes")
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnName("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ContasPagar");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Fornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UrlSite")
                        .HasColumnName("UrlSite")
                        .HasColumnType("varchar(250)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Movimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaFinanceiraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaPagarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnName("Descricao")
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtMovimento")
                        .HasColumnName("DtMovimento")
                        .HasColumnType("datetime");

                    b.Property<string>("NomeDescritivo")
                        .IsRequired()
                        .HasColumnName("NomeDescritivo")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("TipoMovimento")
                        .HasColumnName("TipoMovimento")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnName("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaFinanceiraId");

                    b.HasIndex("ContaPagarId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Movimentos");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Parcela", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaFinanceiraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContaPagarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Desconto")
                        .HasColumnName("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtCompetencia")
                        .HasColumnName("DtCompetencia")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DtPagamento")
                        .HasColumnName("DtPagamento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtVencimento")
                        .HasColumnName("DtVencimento")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Juros")
                        .HasColumnName("Juros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Multa")
                        .HasColumnName("Multa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeDescritivo")
                        .IsRequired()
                        .HasColumnName("NomeDescritivo")
                        .HasColumnType("varchar(250)");

                    b.Property<int>("NumeroParcela")
                        .HasColumnName("NumeroParcela")
                        .HasColumnType("int");

                    b.Property<int>("StatusParcela")
                        .HasColumnName("StatusParcela")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnName("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaFinanceiraId");

                    b.HasIndex("ContaPagarId");

                    b.ToTable("Parcelas");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Smtp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnName("Host")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Mascara")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Porta")
                        .HasColumnName("Porta")
                        .HasColumnType("int");

                    b.Property<bool>("SSL")
                        .HasColumnName("SSL")
                        .HasColumnType("bit");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnName("Usuario")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Smtp");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Administrador")
                        .HasColumnName("Administrador")
                        .HasColumnType("bit");

                    b.Property<bool>("Ativo")
                        .HasColumnName("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataExpiracaoRefleshToken")
                        .HasColumnName("DataExpiracaoRefleshToken")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataExpiracaoToken")
                        .HasColumnName("DataExpiracaoToken")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnName("DtCadastro")
                        .HasColumnType("datetime");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnName("Login")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RefleshToken")
                        .HasColumnName("RefleshToken")
                        .HasColumnType("varchar(100)");

                    b.Property<byte[]>("Senha")
                        .IsRequired()
                        .HasColumnName("Senha")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TokenAlteracaoSenha")
                        .HasColumnName("TokenAlteracaoSenha")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Categoria", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Categorias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContaFinanceira", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("ContaFinanceiras")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.ContasPagar", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Categoria", "Categoria")
                        .WithMany("ContasPagar")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoFinance.Domain.Entities.Fornecedor", "Fornecedor")
                        .WithMany("ContasPagar")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("ContasPagar")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Fornecedor", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Fornecedores")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GoFinance.Domain.Core.ValuesObjects.CnpjCpf", "CnpjCpf", b1 =>
                        {
                            b1.Property<Guid>("FornecedorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("NumeroDocumento")
                                .HasColumnName("NumeroDocumento")
                                .HasColumnType("varchar(14)");

                            b1.HasKey("FornecedorId");

                            b1.ToTable("Fornecedores");

                            b1.WithOwner()
                                .HasForeignKey("FornecedorId");
                        });
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Movimento", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.ContaFinanceira", "ContaFinanceira")
                        .WithMany("Movimentos")
                        .HasForeignKey("ContaFinanceiraId");

                    b.HasOne("GoFinance.Domain.Entities.ContasPagar", "ContasPagar")
                        .WithMany("Movimentos")
                        .HasForeignKey("ContaPagarId");

                    b.HasOne("GoFinance.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Movimentacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Parcela", b =>
                {
                    b.HasOne("GoFinance.Domain.Entities.ContaFinanceira", "ContaFinanceira")
                        .WithMany("Parcelas")
                        .HasForeignKey("ContaFinanceiraId");

                    b.HasOne("GoFinance.Domain.Entities.ContasPagar", "ContaPagar")
                        .WithMany("Parcelas")
                        .HasForeignKey("ContaPagarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Smtp", b =>
                {
                    b.OwnsOne("GoFinance.Domain.Core.ValuesObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("SmtpId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .HasColumnName("Email")
                                .HasColumnType("varchar(200)");

                            b1.HasKey("SmtpId");

                            b1.ToTable("Smtp");

                            b1.WithOwner()
                                .HasForeignKey("SmtpId");
                        });
                });

            modelBuilder.Entity("GoFinance.Domain.Entities.Usuario", b =>
                {
                    b.OwnsOne("GoFinance.Domain.Core.ValuesObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Endereco")
                                .HasColumnName("Email")
                                .HasColumnType("varchar(200)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
